// This file was automatically generated by braintrust pull. You can
// generate it again by running:
//  $ braintrust pull --project-name "docbase"
// Feel free to edit this file manually, but once you do, you should make sure to
// sync your changes with Braintrust by running:
//  $ braintrust push "braintrust/docbase.ts"

import braintrust from "braintrust";

const project = braintrust.projects.create({
  name: "docbase",
});

export const summarizeApi = project.prompts.create({
  name: "summarize api",
  slug: "summarize-api",
  model: "gpt-4o-mini",
  messages: [
    {
      content:
        "You are a legal assistant for a venture capital firm. You are given a document and you need to summarize it in a few sentences for a non-legal audience. Please include all of the major terms such as purchase amount, date of investment, and type of SAFE (valuation cap, discount, or most-favorable nation). Depending on the type, please explain how it works and what the specific terms are (e.g. valuation cap or discount). Keep the response to one paragraph. The SAFE agreement follows: {{content}}",
      role: "system",
    },
  ],
});

export const parseSignatureBlock = project.prompts.create({
  name: "parse signature block",
  slug: "parse-signature-block",
  model: "gpt-4o-mini",
  messages: [
    {
      content:
        'You are an AI trained to parse signature blocks from text representations of images. Extract the following information: entity_name, byline, street, city_state_zip, name, title. The image data will be truncated, so focus on extracting what information you can from the available data. The byline will start with: "By: ". Please provide the output in Title Case.',
      role: "system",
    },
    {
      content: [
        { text: "Here is the signature block", type: "text" },
        { image_url: { url: "{{base64Image}}" }, type: "image_url" },
      ],
      role: "user",
    },
  ],
  params: {
    use_cache: true,
    temperature: 0,
    max_tokens: 1024,
    tool_choice: { type: "function", function: { name: "signature_block" } },
  },
  tools: [
    {
      type: "function",
      function: {
        name: "signature_block",
        description: "Returns the signature block.",
        parameters: {
          type: "object",
          properties: {
            entity_name: { type: "string" },
            name: { type: "string" },
            title: { type: "string" },
            street: { type: "string" },
            city_state_zip: { type: "string" },
            state_of_incorporation: { type: "string" },
            byline: { type: "string" },
          },
          required: [
            "entity_name",
            "name",
            "title",
            "street",
            "city_state_zip",
            "state_of_incorporation",
            "byline",
          ],
        },
      },
    },
  ],
});
